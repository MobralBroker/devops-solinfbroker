apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kconnect
  name: kconnect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kconnect
  template:
    metadata:
      labels:
        app: kconnect
    spec:
      containers:
      - name: kconnect
        env:
        - name: CONFIG_STORAGE_TOPIC
          value: my_connect_configs
        - name: OFFSET_STORAGE_TOPIC
          value: my_connect_offsets
        - name: STATUS_STORAGE_TOPIC
          value: my_connect_statuses
        - name: BOOTSTRAP_SERVERS
          value: PLAINTEXT://kafka-service:9092
        image: debezium/connect:1.9
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8083
          protocol: TCP
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      volumes:
      - name: kube-api-access-lzvwz
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
---
apiVersion: v1
kind: Service
metadata:
  name: kconnect-service
  namespace: dev
spec:
  ports:
  - port: 8083
    targetPort: 8083
  selector:
    app: kconnect

